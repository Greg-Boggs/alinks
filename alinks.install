<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function alinks_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {alinks} (
        id INT(10) unsigned NOT NULL auto_increment,
        alink_start_boundary TINYINT(1) NOT NULL DEFAULT '0',
        alink_text varchar(255) NOT NULL default '',
        alink_end_boundary TINYINT(1) NOT NULL DEFAULT '0',
        alink_url varchar(255) NOT NULL default '',
        url_title varchar(255) NOT NULL default '',
        PRIMARY KEY  (id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
  }
}

function alinks_uninstall() {
  db_query("DROP TABLE IF EXISTS {alinks}");
  variable_del('alinks_node_types');
  variable_del('alinks_limit');
}

function alinks_update_1() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'pgsql':
      db_add_column($ret, 'alinks', 'alink_start_boundary', 'TINYINT(1)', array('DEFAULT' => 0));
      db_add_column($ret, 'alinks', 'alink_end_boundary', 'TINYINT(1)', array('DEFAULT' => 0));
      break;
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {alinks} ADD COLUMN alink_start_boundary TINYINT(1) NOT NULL DEFAULT 0 AFTER id");
      $ret[] = update_sql("ALTER TABLE {alinks} ADD COLUMN alink_end_boundary TINYINT(1) NOT NULL DEFAULT 0 AFTER alink_text");
      break;
  }
  return $ret;
}

function alinks_update_2() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'pgsql':
      db_add_column($ret, 'alinks', 'alink_case_insensitive', 'TINYINT(1)', array('DEFAULT' => 0));
      break;
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {alinks} ADD COLUMN alink_case_insensitive TINYINT(1) NOT NULL DEFAULT 0 AFTER alink_end_boundary");
      break;
  }
  return $ret;
}
